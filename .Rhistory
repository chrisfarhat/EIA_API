require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "A"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "A"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
EIA_QUERY(series, state, type, time, key)
Plot(data)
# script to access the EIA's beta API, convert data, then plot
# requires a unique API key which can be obtained at: http://www.eia.gov/beta/api/
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "A"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
api
# script to access the EIA's beta API, convert data, then plot
# requires a unique API key which can be obtained at: http://www.eia.gov/beta/api/
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "M"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/category/?api_key=",key,"&category_id=371" sep="")
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/category/?api_key=",key,"&category_id=371", sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
data_json
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data_nested
api<-paste("http://api.eia.gov/category/?api_key=",key,"&category_id=293779", sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data_nested
# script to access the EIA's beta API, convert data, then plot
# requires a unique API key which can be obtained at: http://www.eia.gov/beta/api/
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "PET.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "M"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
api<-paste("http://api.eia.gov/category/?api_key=",key,"&category_id=371", sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
require(RCurl)
require(plyr)
require(jsonlite)
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
api<-paste("http://api.eia.gov/category/?api_key=",key,"&category_id=371", sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
data_json
data_flat <- flatten(as.data.frame(data_nested))
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data_nested
as.data.frame(data_nested)
data_nested
data_nested[1]
data_nested[2]
data_nested[0]
data_nested[3]
as.data.frame(data_nested[2])
str(data_frame[2])
str(data_nested[2])
data_flat <- flatten(as.data.frame(data_nested[2]))
data_nested <- data_nested[2]
data_flat <- flatten(data_nested[2])
data_frame
data_nested
type(data_nested)
str(data_nested)
data_nested
data_nested[1]
data_nested[2
]
data_nested[,1]
data_nested[0]
unlist(data_nested)
?unlist
data_ul <- unlist(data_nested[2])
str(data_ul)
data_ul
data_json<-getURL(api, followlocation = TRUE)
data_nested <- fromJSON(data_json)
data_ul <- unlist(data_nested[2])
data_ul
str(data_ul)
data_flat <- flatten(as.data.frame(data_nested[2]))
data_nested
data_nested <- fromJSON(data_json)
data_nested
data_nested <- fromJSON(data_json)
data_ul <- unlist(data_nested)
data_ul
data_flat <- flatten(as.data.frame(data_nested))
# script to access the EIA's beta API, convert data, then plot
# requires a unique API key which can be obtained at: http://www.eia.gov/beta/api/
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "M"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_nested
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
# script to access the EIA's beta API, convert data, then plot
# requires a unique API key which can be obtained at: http://www.eia.gov/beta/api/
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "Y"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "Y"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
data
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "Y"
#API Key
ke
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "Y"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "Y"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time = "A"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
#need to pass names from selected series instead of string
names(data)<-c(time, series)
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
# script to access the EIA's beta API, convert data, then plot
# requires a unique API key which can be obtained at: http://www.eia.gov/beta/api/
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time_step = "A"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time_step, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
#need to pass names from selected series instead of string
names(data)<-c(time_step, series)
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
#need to put inside IF/THEN depending on timestep
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
# script to access the EIA's beta API, convert data, then plot
# requires a unique API key which can be obtained at: http://www.eia.gov/beta/api/
require(RCurl)
require(plyr)
require(jsonlite)
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time_step = "A"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time_step, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
#need to pass names from selected series instead of string
names(data)<-c(time_step, series)
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data
data[1]
data[2]<-as.numeric(data[2])
data[2]
names(data)<-c(time_step, series)
data[2]<-as.numeric(data[2])
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
#need to pass names from selected series instead of string
names(data)<-c(time_step, series)
data[2]<-as.numeric(data[2])
data[2]
str(data[2])
str(data$ELEC.PRICE)
data$str(series)
data$+str(series)
data{2}
data{2,0}
data[2]
data$ELEC.PRICE
data$ELEC.PRICE.
str(data[2])
str(data$ELEC.PRICE.)
names(data)<-c(time_step, series)
data$str(series)=<-as.numeric(data[2])
data$ELEC.PRICE.<-as.numeric(data$ELEC.PRICE.)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
data
#series
series = "ELEC.PRICE."
#Two letter state abbreviation
state = "TX"
#Type All = All, Residential =
type = "ALL"
#Time A = Annual, M = Monthly, Q = Quarterly
time_step = "A"
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
id<-paste(series,state,"-",type,".",time_step, sep="")
api<-paste("http://api.eia.gov/series/data?api_key=",key,"&series_id=",id, sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
#Convert JSON format to R format, then flatten structure
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
#need to pass names from selected series instead of string
names(data)<-c(time_step, series)
data$ELEC.PRICE.<-as.numeric(data$ELEC.PRICE.)
data$YEAR<-as.Date(data$YEAR, "%Y")
data
data_nested <- fromJSON(data_json)
data_flat <- flatten(as.data.frame(data_nested))
data <- data_flat$series_data.data
data<-data.frame(data)
data
as.numeric
?as.numeric
data$ELEC.PRICE.<-as.numeric(data$ELEC.PRICE.)
names(data)<-c(YEAR, ELEC.PRICE)
names(data)<-c('YEAR', 'ELEC.PRICE')
data$ELEC.PRICE<-as.numeric(data$ELEC.PRICE)
data$YEAR<-as.Date(data$YEAR, "%Y")
plot(data, main = id, type = "b")
data_json
#API Key
key <- scan("/Users/jim/Documents/R/private_EIA_API_key.txt", what = "character")
#Create API url
api<-paste("http://api.eia.gov/category/?api_key=",key,"&category_id=371", sep="")
#Get data via RCurl
data_json<-getURL(api, followlocation = TRUE)
data_json
data_nested <- fromJSON(data_json)
data_nested
data_nested2 <-data_nested[2]
data_nested2
data_nested2[2]
data_nested2[1]
data_nested$category$childcategories
data_flat <- flatten(as.data.frame(data_nested$category$childcategories))
data_flat
str(data_flat)
